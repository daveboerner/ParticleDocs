<h1 id='introduction'>Introduction</h1>
<p>Particle Health supports a RESTful Web Service based off the FHIR and CCDA standards. We expose an API by which verified customers (data seekers) may access health records for over 250M unique patients across the U.S. </p></p>

<p>We have language bindings in Shell, JavaScript and Python! You can view code examples in the dark area to the right, just select the tab of your prefered language.</p>
<h1 id='authentication'>Authentication</h1>
<blockquote>
<p>To authorize, use this code:</p>
</blockquote>

<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'api_endpoint_here'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code><span class="c"># With shell, you can just pass the correct header with each request</span>
curl <span class="s2">"api_endpoint_here"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">api_endpoint_here</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Make sure to replace <code>token</code> with your API key.</p>
</blockquote>

<p>When making requests to the Particle API, the data seeker must include an authorization token in the HTTP Header of the request like:</p>

<p><code>Authorization: token</code></p>

<aside class="notice">
You must replace <code>token</code> with your personal API key.
</aside>

<p>Only accredited data seekers will be credentialed to perform queries against the Particle network.</p>

<p><a href='mailto:go@particlehealth.com'>Request a developer key</a> </p>
<h1 id='clinical-api-operations'>Clinical API Operations</h1><h2 id='post-demographics'>POST Demographics</h2>
<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
api.kittens.get
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.particlehealth.com/particle-sandbox-api/api/v1/queries'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
<span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"address_city"</span><span class="p">:</span> <span class="s">"Cambridge"</span><span class="p">,</span>
    <span class="s">"address_lines"</span><span class="p">:</span> <span class="p">[</span>
      <span class="s">"123 Main St"</span><span class="p">,</span>
      <span class="s">"Apt 4"</span>
    <span class="p">],</span>
    <span class="s">"address_state"</span><span class="p">:</span> <span class="s">"Massachusetts"</span><span class="p">,</span>
    <span class="s">"date_of_birth"</span><span class="p">:</span> <span class="s">"1966-01-18"</span><span class="p">,</span>
    <span class="s">"email"</span><span class="p">:</span> <span class="s">"john@doe.com"</span><span class="p">,</span>
    <span class="s">"family_name"</span><span class="p">:</span> <span class="s">"Hermiston"</span><span class="p">,</span>
    <span class="s">"gender"</span><span class="p">:</span> <span class="s">"FEMALE"</span><span class="p">,</span>
    <span class="s">"given_name"</span><span class="p">:</span> <span class="s">"Ariel"</span><span class="p">,</span>
    <span class="s">"npi"</span><span class="p">:</span> <span class="s">"9876"</span><span class="p">,</span>
    <span class="s">"postal_code"</span><span class="p">:</span> <span class="s">"02138"</span><span class="p">,</span>
    <span class="s">"purpose_of_use"</span><span class="p">:</span> <span class="s">"TREATMENT"</span><span class="p">,</span>
    <span class="s">"ssn"</span><span class="p">:</span> <span class="s">"123-45-6789"</span><span class="p">,</span>
    <span class="s">"telephone"</span><span class="p">:</span> <span class="s">"1-234-567-8910"</span>
  <span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">,</span> <span class="n">json</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">())</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> POST <span class="s2">"https://api.particlehealth.com/particle-sandbox-api/api/v1/queries"</span> <span class="nt">-H</span> <span class="s2">"accept: application/json"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span> <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">-d</span> <span class="s2">"{ </span><span class="se">\"</span><span class="s2">address_city</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">Cambridge</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">address_lines</span><span class="se">\"</span><span class="s2">: [ </span><span class="se">\"</span><span class="s2">123 Main St</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">Apt 4</span><span class="se">\"</span><span class="s2"> ], </span><span class="se">\"</span><span class="s2">address_state</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">Massachusetts</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">date_of_birth</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">1966-01-18</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">email</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">john@doe.com</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">family_name</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">Hermiston</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">gender</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">FEMALE</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">given_name</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">Ariel</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">npi</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">9876</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">postal_code</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">02138</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">purpose_of_use</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">TREATMENT</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">ssn</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">123-45-6789</span><span class="se">\"</span><span class="s2">, </span><span class="se">\"</span><span class="s2">telephone</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">1-234-567-8910</span><span class="se">\"</span><span class="s2">}"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">node-fetch</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">https://api.particlehealth.com/particle-sandbox-api/api/v1/queries</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">address_city</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Cambridge</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">address_lines</span><span class="dl">"</span><span class="p">:</span> <span class="p">[</span>
      <span class="dl">"</span><span class="s2">123 Main St</span><span class="dl">"</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">Apt 4</span><span class="dl">"</span>
    <span class="p">],</span>
    <span class="dl">"</span><span class="s2">address_state</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Massachusetts</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">date_of_birth</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">1966-01-18</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">email</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">john@doe.com</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">family_name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Hermiston</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">gender</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">FEMALE</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">given_name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Ariel</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">npi</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">9876</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">postal_code</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">02138</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">purpose_of_use</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">TREATMENT</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">ssn</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">123-45-6789</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">telephone</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">1-234-567-8910</span><span class="dl">"</span>
  <span class="p">}</span>
  <span class="kd">var</span> <span class="nx">datain</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
  <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span> <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">,</span> <span class="na">body</span><span class="p">:</span> <span class="nx">datain</span><span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">json</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
  <span class="c1">// Do something with the returned data.</span>
<span class="p">});</span>


</code></pre></div>
<blockquote>
<p>The above command returns JSON matching the body of the POST as well as a state of pending</p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"fdca637c-9ef6-4969-8160-9a1a8a805887"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"demographics"</span><span class="p">:</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"given_name"</span><span class="p">:</span><span class="s2">"Ariel"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"family_name"</span><span class="p">:</span><span class="s2">"Hermiston"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"date_of_birth"</span><span class="p">:</span><span class="s2">"1966-01-18"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"gender"</span><span class="p">:</span><span class="s2">"FEMALE"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"ssn"</span><span class="p">:</span><span class="s2">"123-45-6789"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"email"</span><span class="p">:</span><span class="s2">"john@doe.com"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"address_lines"</span><span class="p">:</span><span class="w">
        </span><span class="p">[</span><span class="s2">"123 Main St"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"Apt 4"</span><span class="p">],</span><span class="w">
      </span><span class="nl">"address_state"</span><span class="p">:</span><span class="s2">"Massachusetts"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"address_city"</span><span class="p">:</span><span class="s2">"Cambridge"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"postal_code"</span><span class="p">:</span><span class="s2">"02138"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"telephone"</span><span class="p">:</span><span class="s2">"(234) 567-8910"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"npi"</span><span class="p">:</span><span class="s2">"9876"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"purpose_of_use"</span><span class="p">:</span><span class="s2">"TREATMENT"</span><span class="w">
    </span><span class="p">},</span><span class="w">
  </span><span class="nl">"state"</span><span class="p">:</span><span class="s2">"PENDING"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='http-request'>HTTP Request</h3>
<p><code>POST https://api.particlehealth.com/particle-sandbox-api/api/v1/queries</code></p>
<h3 id='body-payload'>Body Payload</h3>
<p><code>
{
  &quot;address_city&quot;: &quot;Cambridge&quot;,
  &quot;address_lines&quot;: 
  [
    &quot;123 Main St&quot;,
    &quot;Apt 4&quot;
  ],
  &quot;address_state&quot;: &quot;Massachusetts&quot;,
  &quot;date_of_birth&quot;: &quot;1966-01-18&quot;,
  &quot;email&quot;: &quot;john@doe.com&quot;,
  &quot;family_name&quot;: &quot;Hermiston&quot;,
  &quot;gender&quot;: &quot;FEMALE&quot;,
  &quot;given_name&quot;: &quot;Ariel&quot;,
  &quot;npi&quot;: &quot;9876&quot;,
  &quot;postal_code&quot;: &quot;02138&quot;,
  &quot;purpose_of_use&quot;: &quot;TREATMENT&quot;,
  &quot;ssn&quot;: &quot;123-45-6789&quot;,
  &quot;telephone&quot;: &quot;1-234-567-8910&quot;
}
</code></p>

<aside class="success">
address_lines is an array with each street line seperated by a ,
</aside>
<h2 id='get-status-of-all-queries'>GET status of all Queries</h2>
<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
api.kittens.get(2)
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.particlehealth.com/particle-sandbox-api/api/v1/queries'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
<span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">())</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> GET <span class="s2">"https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/"</span> <span class="nt">-H</span> <span class="s2">"accept: application/json"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">node-fetch</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>

<span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span> <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">json</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
  <span class="c1">// Do something with the returned data.</span>
<span class="p">});</span>
</code></pre></div>
<blockquote>
<p>The above command returns status of all queries in json like:</p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"queries"</span><span class="p">:</span><span class="w">
  </span><span class="p">[</span><span class="w">
    </span><span class="s2">"id"</span><span class="err">:</span><span class="s2">"fdca637c-9ef6-4969-8160-9a1a8a805887"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"demographics"</span><span class="err">:</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"given_name"</span><span class="p">:</span><span class="s2">"Ariel"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"family_name"</span><span class="p">:</span><span class="s2">"Hermiston"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"date_of_birth"</span><span class="p">:</span><span class="s2">"1966-01-18"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"gender"</span><span class="p">:</span><span class="s2">"FEMALE"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"ssn"</span><span class="p">:</span><span class="s2">"123-45-6789"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"email"</span><span class="p">:</span><span class="s2">"john@doe.com"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address_lines"</span><span class="p">:</span><span class="w">
          </span><span class="p">[</span><span class="s2">"123 Main St"</span><span class="p">,</span><span class="w">
          </span><span class="s2">"Apt 4"</span><span class="p">],</span><span class="w">
        </span><span class="nl">"address_state"</span><span class="p">:</span><span class="s2">"Massachusetts"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address_city"</span><span class="p">:</span><span class="s2">"Cambridge"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"postal_code"</span><span class="p">:</span><span class="s2">"02138"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"telephone"</span><span class="p">:</span><span class="s2">"(234) 567-8910"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"npi"</span><span class="p">:</span><span class="s2">"9876"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"purpose_of_use"</span><span class="p">:</span><span class="s2">"TREATMENT"</span><span class="w">
      </span><span class="p">},</span><span class="w">
    </span><span class="s2">"state"</span><span class="err">:</span><span class="s2">"COMPLETE"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>
<p>This endpoint returns the status of all queries.</p>
<h3 id='http-request-2'>HTTP Request</h3>
<p><code>GET https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/</code></p>
<h2 id='get-status-of-a-query'>GET status of a Query</h2>
<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
api.kittens.delete(2)
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/{query_id}'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
<span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">())</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> GET <span class="s2">"https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/{query_id}"</span> <span class="nt">-H</span> <span class="s2">"accept: application/json"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">node-fetch</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/{query_id}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>

<span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span> <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">json</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
  <span class="c1">// Do something with the returned data.</span>
<span class="p">});</span>
</code></pre></div>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"queries"</span><span class="p">:</span><span class="w">
  </span><span class="p">[</span><span class="w">
    </span><span class="s2">"id"</span><span class="err">:</span><span class="s2">"fdca637c-9ef6-4969-8160-9a1a8a805887"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"demographics"</span><span class="err">:</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"given_name"</span><span class="p">:</span><span class="s2">"Ariel"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"family_name"</span><span class="p">:</span><span class="s2">"Hermiston"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"date_of_birth"</span><span class="p">:</span><span class="s2">"1966-01-18"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"gender"</span><span class="p">:</span><span class="s2">"FEMALE"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"ssn"</span><span class="p">:</span><span class="s2">"123-45-6789"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"email"</span><span class="p">:</span><span class="s2">"john@doe.com"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address_lines"</span><span class="p">:</span><span class="w">
          </span><span class="p">[</span><span class="s2">"123 Main St"</span><span class="p">,</span><span class="w">
          </span><span class="s2">"Apt 4"</span><span class="p">],</span><span class="w">
        </span><span class="nl">"address_state"</span><span class="p">:</span><span class="s2">"Massachusetts"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address_city"</span><span class="p">:</span><span class="s2">"Cambridge"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"postal_code"</span><span class="p">:</span><span class="s2">"02138"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"telephone"</span><span class="p">:</span><span class="s2">"(234) 567-8910"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"npi"</span><span class="p">:</span><span class="s2">"9876"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"purpose_of_use"</span><span class="p">:</span><span class="s2">"TREATMENT"</span><span class="w">
      </span><span class="p">},</span><span class="w">
    </span><span class="s2">"state"</span><span class="err">:</span><span class="s2">"COMPLETE"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"files"</span><span class="err">:</span><span class="w">
      </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"8d83a62a-f4e0-4ca8-983b-07d8cdcc5329"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"title"</span><span class="p">:</span><span class="s2">"019713e6-e7c1-4e30-873f-eb5b33f8ff55"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"application/xml"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"url"</span><span class="p">:</span><span class="s2">"/api/v1/files/fdca637c-9ef6-4969-8160-9a1a8a805887/8d83a62a-f4e0-4ca8-983b-07d8cdcc5329"</span><span class="w">
       </span><span class="p">}</span><span class="w">
      </span><span class="p">]</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>
<p>This endpoint retrieves all file pointers associated with a query.</p>
<h3 id='http-request-3'>HTTP Request</h3>
<p><code>GET https://api.particlehealth.com/particle-sandbox-api/api/v1/queries/{query_id}</code></p>
<h3 id='url-parameters'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>query_id</td>
<td>The ID of the query to request files of</td>
</tr>
</tbody></table>
<h2 id='get-zip-file'>GET Zip File</h2>
<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
api.kittens.delete(2)
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.particlehealth.com/particle-sandbox-api/api/v1/files/fdca637c-9ef6-4969-8160-9a1a8a805887'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"application/zip"</span><span class="p">,</span>
<span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> GET <span class="s2">"https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/zip"</span> <span class="nt">-H</span> <span class="s2">"accept: application/zip"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">node-fetch</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">https://api.https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/zip.com/particle-sandbox-api/api/v1/queries/</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/zip</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>

<span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span> <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">json</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
  <span class="c1">// Do something with the returned data.</span>
<span class="p">});</span>


</code></pre></div>
<blockquote>
<p>The above command returns a zip file of all files found for the patient.</p>
</blockquote>

<p>This endpoint retrieves all files associated with a query as a zip file for download.</p>
<h3 id='http-request-4'>HTTP Request</h3>
<p><code>GET https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/zip</code></p>
<h3 id='url-parameters-2'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>query_id</td>
<td>The ID of the query to request a zipped file of</td>
</tr>
</tbody></table>
<h2 id='get-file'>GET File</h2>
<!--
```ruby
require 'kittn'

api = Kittn::APIClient.authorize!('token')
api.kittens.delete(2)
```
-->
<div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/{file_id}'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">"Content-Type"</span><span class="p">:</span> <span class="s">"octet-stream"</span><span class="p">,</span>
<span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'token'</span><span class="p">}</span>
<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> GET <span class="s2">"https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/{file_id}"</span> <span class="nt">-H</span> <span class="s2">"accept: application/octet-stream"</span> <span class="nt">-H</span> <span class="s2">"Authorization: token"</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">node-fetch</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span><span class="dl">'</span><span class="s1">https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/{file_id}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">"</span><span class="s2">Content-Type</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">application/octet-stream</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">token</span><span class="dl">"</span>
<span class="p">}</span>

<span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span> <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">})</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">()</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">json</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">json</span><span class="p">);</span>
  <span class="c1">// Do something with the returned data.</span>
<span class="p">});</span>
</code></pre></div>
<blockquote>
<p>The above command returns a specified file found for the patient.</p>
</blockquote>

<p>This endpoint retrieves a specified file found for the patient.</p>
<h3 id='http-request-5'>HTTP Request</h3>
<p><code>GET https://api.particlehealth.com/particle-sandbox-api/api/v1/files/{query_id}/{file_id}</code></p>
<h3 id='url-parameters-3'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>query_id</td>
<td>The ID of the query to request</td>
</tr>
<tr>
<td>file_id</td>
<td>The ID of the file to request</td>
</tr>
</tbody></table>
<h1 id='architecture'>Architecture</h1>
<p>By simply requesting information with a minimum set of demographic information, Particle is able to query partner Health Information Networks (data holders), producing aggregated data in a seamless, efficient and HIPAA compliant manner. </p>

<p>The demographics to include in the initial POST operation body include:</p>

<ul>
<li>Last Name - family_name</li>
<li>First Name - given_name</li>
<li>Date of Birth - date_of_birth</li>
<li>Zip - postal_code - postal_code</li>
<li>Gender - gender</li>
<li>Purpose Of Use - purpose_of_use</li>
<li>NPI : National Provider Identifier - npi (optional - required for treatment based queries)</li>
<li>City - address_city </li>
<li>State - address_state </li>
<li>Address - address_lines (optional - success rate increase of ~30%)</li>
<li>Phone - telephone (optional)</li>
<li>Social Security Number - ssn (optional)</li>
</ul>

<p>Particle has designed this process with security, simplicity and elegance as central tenets. What took numerous coordinated IHE and RESTful queries across numerous networks has been distilled to a simple API to access data across the health ecosystem - regardless of geographic boundaries or vendor systems. </p>

<p>Please visit our <a href="https://api.particlehealth.com/portal/">developer portal</a>. 
<img src="images/phdiagram.png" class="logo" alt="Logo" /></p>
